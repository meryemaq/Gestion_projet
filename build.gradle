plugins {
	id 'org.springframework.boot' version '1.5.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'

	id 'war'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()

		flatDir { dirs "lib" }
		jcenter()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'




	implementation module(":compile:1.0") {
		dependency ":compile-transitive-1.0@jar"
		dependency ":providedCompile-transitive:1.0@jar"
	}
	providedCompile "javax.servlet:servlet-api:2.5"
	providedCompile module(":providedCompile:1.0") {
		dependency ":providedCompile-transitive:1.0@jar"
	}
	runtimeOnly ":runtime:1.0"
	providedRuntime ":providedRuntime:1.0@jar"
	testImplementation "junit:junit:4.12"
	moreLibs ":otherLib:1.0"



	
	runtimeOnly 'net.sourceforge.nekohtml:nekohtml:1.9.15'
	implementation 'com.github.javafaker:javafaker:0.13'
	
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
war {
	from 'src/rootContent' // adds a file-set to the root of the archive
	webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
	classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
	classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
	webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
}
